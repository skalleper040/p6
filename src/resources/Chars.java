package resources;

/**
 * Klass som representerar tecken skrivna i 2d-arrayer.
 * 
 * Små bokstäver : lc + bokstav(Stor). Stora bokstäver: cap + bokstav. Siffor
 * 0-9: char + siffra. Specialtecken: charExMark = !, charQuestion = ?, charDot
 * = ., charComma = , , charSpace = , charEquals = =, charHasTag = # , charParL
 * = (, charParR = ), charMinus = -, charUnderScore = _ , charUnKnown = Okänt
 * tecken.
 * 
 * @author Loise Borg, Sven Lindqvist
 *
 */
public class Chars {

	private static int[][] lcA = { { 0, 0, 0, 0, 0, 0, 0 }, 
									{ 0, 0, 0, 0, 0, 0, 0 }, 
									{ 0, 0, 0, 0, 0, 0, 0 },
									{ 0, 0, 1, 1, 1, 0, 0 }, 
									{ 0, 1, 0, 0, 1, 0, 0 },
									{ 0, 1, 0, 0, 1, 0, 0 }, 
									{ 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcB = { { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0 } };

	private static int[][] lcC = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0 } };

	private static int[][] lcD = { { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 },
			{ 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcE = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcF = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 } };

	private static int[][] lcG = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 },
			{ 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 } };

	private static int[][] lcH = { { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 } };

	private static int[][] lcI = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] lcJ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 } };

	private static int[][] lcK = { { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 } };

	private static int[][] lcL = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] lcM = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 } };

	private static int[][] lcN = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 } };

	private static int[][] lcO = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 } };

	private static int[][] lcP = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 } };

	private static int[][] lcQ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 } };

	private static int[][] lcR = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 } };

	private static int[][] lcS = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcT = { { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] lcU = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcV = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] lcW = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 } };

	private static int[][] lcX = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 } };

	private static int[][] lcY = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 } };

	private static int[][] lcZ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcÅ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcÄ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] lcÖ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 } };

	private static int[][] capA = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 } };

	private static int[][] capB = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] capC = { { 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] capD = { { 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0 } };

	private static int[][] capE = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] capF = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 } };

	private static int[][] capG = { { 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] capH = { { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 } };

	private static int[][] capI = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] capJ = { { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 },
			{ 0, 0, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] capK = { { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0 },
			{ 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 } };

	private static int[][] capL = { { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] capM = { { 1, 1, 1, 1, 1, 1, 1 }, { 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 },
			{ 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 0, 0, 0, 1 } };

	private static int[][] capN = { { 0, 1, 1, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 },
			{ 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 1, 1, 1, 0 } };

	private static int[][] capO = { { 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 1, 0, 0, 0, 0, 0, 1 },
			{ 1, 0, 0, 0, 0, 0, 1 }, { 1, 0, 0, 0, 0, 0, 1 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] capP = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 } };

	private static int[][] capQ = { { 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 1, 0, 0, 0, 0, 0, 1 },
			{ 1, 0, 0, 0, 0, 0, 1 }, { 1, 0, 0, 0, 1, 0, 1 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 1 } };

	private static int[][] capR = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 } };

	private static int[][] capS = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] capT = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] capU = { { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] capV = { { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] capW = { { 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 },
			{ 1, 0, 0, 1, 0, 0, 1 }, { 1, 0, 0, 1, 0, 0, 1 }, { 0, 1, 0, 1, 0, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 } };

	private static int[][] capX = { { 1, 0, 0, 0, 0, 0, 1 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 1, 0, 0, 0, 0, 0, 1 } };

	private static int[][] capY = { { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] capZ = { { 1, 1, 1, 1, 1, 1, 1 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 1, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 1, 1, 1, 1, 1, 1, 1 } };

	private static int[][] capÅ = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 } };

	private static int[][] capÄ = { { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 } };

	private static int[][] capÖ = { { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 },
			{ 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] char0 = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 0, 0, 1, 0 },
			{ 0, 1, 0, 1, 0, 1, 0 }, { 0, 1, 0, 0, 1, 1, 0 }, { 0, 1, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] char1 = { { 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] char2 = { { 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 1, 1, 1, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] char3 = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 },
			{ 0, 0, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] char4 = { { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 } };

	private static int[][] char5 = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] char6 = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] char7 = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 },
			{ 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 } };

	private static int[][] char8 = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] char9 = { { 0, 1, 1, 1, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 },
			{ 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 } };

	private static int[][] charExMark = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 },
			{ 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] charQuestion = { { 0, 0, 1, 1, 1, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 },
			{ 0, 0, 0, 1, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] charDot = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] charSpace = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 } };

	private static int[][] charEquals = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 },
			{ 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 } };

	private static int[][] charHashTag = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0 },
			{ 0, 0, 1, 0, 1, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 1, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 } };

	private static int[][] charParL = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 },
			{ 0, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] charParR = { { 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 0 },
			{ 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 0, 1, 0 }, { 0, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0 } };

	private static int[][] charComma = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 1, 1, 0, 0 } };

	private static int[][] charMinus = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 } };

	private static int[][] charUnderScore = { { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };

	private static int[][] charUnKnown = { { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 },
			{ 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 1, 0 } };
	
	
	/**
	 * Returner en 2d-array som innehåller det tecken som metoden får in som parameter.
	 * @param c tecken som ska returnas som 2d-array
	 * @return 2d-array 
	 */

	public static Array7x7 getChar(char c) {
		Array7x7 res;
		switch (c) {
		case 'a':
			res = new Array7x7(lcA);
			break;
		case 'b':
			res = new Array7x7(lcB);
			break;
		case 'c':
			res = new Array7x7(lcC);
			break;
		case 'd':
			res = new Array7x7(lcD);
			break;
		case 'e':
			res = new Array7x7(lcE);
			break;
		case 'f':
			res = new Array7x7(lcF);
			break;
		case 'g':
			res = new Array7x7(lcG);
			break;
		case 'h':
			res = new Array7x7(lcH);
			break;
		case 'i':
			res = new Array7x7(lcI);
			break;
		case 'j':
			res = new Array7x7(lcJ);
			break;
		case 'k':
			res = new Array7x7(lcK);
			break;
		case 'l':
			res = new Array7x7(lcL);
			break;
		case 'm':
			res = new Array7x7(lcM);
			break;
		case 'n':
			res = new Array7x7(lcN);
			break;
		case 'o':
			res = new Array7x7(lcO);
			break;
		case 'p':
			res = new Array7x7(lcP);
			break;
		case 'q':
			res = new Array7x7(lcQ);
			break;
		case 'r':
			res = new Array7x7(lcR);
			break;
		case 's':
			res = new Array7x7(lcS);
			break;
		case 't':
			res = new Array7x7(lcT);
			break;
		case 'u':
			res = new Array7x7(lcU);
			break;
		case 'v':
			res = new Array7x7(lcV);
			break;
		case 'w':
			res = new Array7x7(lcW);
			break;
		case 'x':
			res = new Array7x7(lcX);
			break;
		case 'y':
			res = new Array7x7(lcY);
			break;
		case 'z':
			res = new Array7x7(lcZ);
			break;
		case 'å':
			res = new Array7x7(lcÅ);
			break;
		case 'ä':
			res = new Array7x7(lcÄ);
			break;
		case 'ö':
			res = new Array7x7(lcÖ);
			break;
		case 'A':
			res = new Array7x7(capA);
			break;
		case 'B':
			res = new Array7x7(capB);
			break;
		case 'C':
			res = new Array7x7(capC);
			break;
		case 'D':
			res = new Array7x7(capD);
			break;
		case 'E':
			res = new Array7x7(capE);
			break;
		case 'F':
			res = new Array7x7(capF);
			break;
		case 'G':
			res = new Array7x7(capG);
			break;
		case 'H':
			res = new Array7x7(capH);
			break;
		case 'I':
			res = new Array7x7(capI);
			break;
		case 'J':
			res = new Array7x7(capJ);
			break;
		case 'K':
			res = new Array7x7(capK);
			break;
		case 'L':
			res = new Array7x7(capL);
			break;
		case 'M':
			res = new Array7x7(capM);
			break;
		case 'N':
			res = new Array7x7(capN);
			break;
		case 'O':
			res = new Array7x7(capO);
			break;
		case 'P':
			res = new Array7x7(capP);
			break;
		case 'Q':
			res = new Array7x7(capQ);
			break;
		case 'R':
			res = new Array7x7(capR);
			break;
		case 'S':
			res = new Array7x7(capS);
			break;
		case 'T':
			res = new Array7x7(capT);
			break;
		case 'U':
			res = new Array7x7(capU);
			break;
		case 'V':
			res = new Array7x7(capV);
			break;
		case 'W':
			res = new Array7x7(capW);
			break;
		case 'X':
			res = new Array7x7(capX);
			break;
		case 'Y':
			res = new Array7x7(capY);
			break;
		case 'Z':
			res = new Array7x7(capZ);
			break;
		case 'Å':
			res = new Array7x7(capÅ);
			break;
		case 'Ä':
			res = new Array7x7(capÄ);
			break;
		case 'Ö':
			res = new Array7x7(capÖ);
			break;
		case '0':
			res = new Array7x7(char0);
			break;
		case '1':
			res = new Array7x7(char1);
			break;
		case '2':
			res = new Array7x7(char2);
			break;
		case '3':
			res = new Array7x7(char3);
			break;
		case '4':
			res = new Array7x7(char4);
			break;
		case '5':
			res = new Array7x7(char5);
			break;
		case '6':
			res = new Array7x7(char6);
			break;
		case '7':
			res = new Array7x7(char7);
			break;
		case '8':
			res = new Array7x7(char8);
			break;
		case '9':
			res = new Array7x7(char9);
			break;
		case '!':
			res = new Array7x7(charExMark);
			break;
		case '?':
			res = new Array7x7(charQuestion);
			break;
		case '.':
			res = new Array7x7(charDot);
			break;
		case ' ':
			res = new Array7x7(charSpace);
			break;
		case '=':
			res = new Array7x7(charEquals);
			break;
		case '#':
			res = new Array7x7(charHashTag);
			break;
		case '(':
			res = new Array7x7(charParL);
			break;
		case ')':
			res = new Array7x7(charParR);
			break;
		case ',':
			res = new Array7x7(charComma);
			break;
		case '-':
			res = new Array7x7(charMinus);
			break;
		case '_':
			res = new Array7x7(charUnderScore);
			break;
		default:
			res = new Array7x7(charUnKnown);
			break;

		}
		return res;
	}
}
